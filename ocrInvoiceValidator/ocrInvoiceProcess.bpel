<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Tue Feb 04 19:44:44 ICT 2020
  Author:  USER
  Type: BPEL 2.0 Process
  Purpose: One Way BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ocrInvoiceProcess"
               targetNamespace="http://xmlns.oracle.com/ocrInvoiceValidator/ocrInvoiceValidator/ocrInvoiceProcess"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/ocrInvoiceValidator/ocrInvoiceValidator/ocrInvoiceProcess"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/ocrInvoiceValidator/ocrInvoiceValidator/partnerMgmtSvc"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns3="http://www.iconpln.co.id/procure-to-pay"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/top/partnerMgmtSvc"
         xmlns:ns4="http://xmlns.oracle.com/invokeValidationRules/invokeValidationRules_DecisionService_1"
         xmlns:ns5="http://xmlns.oracle.com/bpel"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <import namespace="http://xmlns.oracle.com/ocrInvoiceValidator/ocrInvoiceValidator/ocrInvoiceProcess" location="ocrInvoiceProcess.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="ocrinvoiceprocess_client" partnerLinkType="client:ocrInvoiceProcess" myRole="ocrInvoiceProcessProvider"/>
    <partnerLink name="partnerMgmtSvc" partnerLinkType="ns1:partnerMgmtSvc_plt"
                 partnerRole="partnerMgmtSvc_role"/>
    <partnerLink name="invokeValidationRules.invokeValidationRules_DecisionService_1"
                 partnerLinkType="ns4:invokeValidationRules.invokeValidationRules_DecisionService_1"
                 partnerRole="IDecisionService"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:ocrInvoiceProcessRequestMessage"/>
    <variable name="Invoke1_partnerMgmtSvcSelect_InputVariable"
              messageType="ns1:partnerMgmtSvcSelect_inputParameters"/>
    <variable name="Invoke1_partnerMgmtSvcSelect_OutputVariable"
              messageType="ns1:ContractCollection_msg"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in ocrInvoiceProcess.wsdl) -->
    <receive name="receiveInput" partnerLink="ocrinvoiceprocess_client" portType="client:ocrInvoiceProcess" operation="process" variable="inputVariable" createInstance="yes"/>
    <assign name="Assign1">
      <copy>
        <from>$inputVariable.payload/ns3:billTo/ns3:contractid</from>
        <to>$Invoke1_partnerMgmtSvcSelect_InputVariable.partnerMgmtSvcSelect_inputParameters/ns2:pContractNumber</to>
      </copy>
    </assign>
    <invoke name="Invoke1"
            partnerLink="partnerMgmtSvc" portType="ns1:partnerMgmtSvc_ptt"
            operation="partnerMgmtSvcSelect"
            inputVariable="Invoke1_partnerMgmtSvcSelect_InputVariable"
            outputVariable="Invoke1_partnerMgmtSvcSelect_OutputVariable"
            bpelx:invokeAsDetail="no"/>
    <assign name="Assign2">
      <copy>
        <from>true()</from>
        <to>$inputVariable.payload/ns3:validationData/ns3:validated</to>
      </copy>
      <copy>
        <from>$Invoke1_partnerMgmtSvcSelect_OutputVariable.ContractCollection/ns2:Contract/ns2:remainValue</from>
        <to>$inputVariable.payload/ns3:remainingValueinContract</to>
      </copy>
    </assign>
    <scope name="Rule1" exitOnStandardFault="no">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:decide"/>
      </bpelx:annotation>
      <variables>
        <variable name="dsIn" messageType="ns4:callFunctionStatelessMessage"/>
        <variable name="dsOut"
                  messageType="ns4:callFunctionStatelessDecisionMessage"/>
      </variables>
      <sequence name="Sequence1">
        <assign name="Facts_To_Rule_Service">
          <copy>
            <from>$inputVariable.payload</from>
            <to>$dsIn.payload/ns4:parameterList/ns3:invoice</to>
          </copy>
        </assign>
        <assign name="BPEL_Header">
          <copy>
            <from>"invokeValidationRules_DecisionService_1"</from>
            <to>$dsIn.payload/@name</to>
          </copy>
        </assign>
        <invoke name="Invoke"
                partnerLink="invokeValidationRules.invokeValidationRules_DecisionService_1"
                portType="ns4:IDecisionService"
                operation="callFunctionStateless" inputVariable="dsIn"
                outputVariable="dsOut"/>
        <assign name="Rule_Service_To_Facts">
          <copy>
            <from>$dsOut.payload/ns4:resultList/ns3:invoice/ns3:validationData/ns3:validated</from>
            <to>$inputVariable.payload/ns3:validationData/ns3:validated</to>
          </copy>
        </assign>
      </sequence>
    </scope>
    <if name="If1">
      <documentation>
        <![CDATA[valid invoice]]>
      </documentation>
      <condition>$inputVariable.payload/ns3:validationData/ns3:validated = true()</condition>
      <empty name="Empty1"/>
      <else>
        <empty name="Empty2"/>
      </else>
    </if>
  </sequence>
</process>